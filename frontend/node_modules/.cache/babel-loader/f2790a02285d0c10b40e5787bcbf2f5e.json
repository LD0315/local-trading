{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport Cookie from 'js-cookie';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userSigninReducer } from './reducers/userReducers';\nconst cartItems = Cookie.getJSON(\"cartItems\") || [];\nconst userInfo = Cookie.getJSON(\"userInfo\") || [];\nconst inistialState = {\n  cart: {\n    cartItems\n  }\n};\nconst reducer = combineReducers({\n  //reducer: return new state based on that action\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // thunk is a middleware for redux, it allows us to run async operation inside redux\n\nconst store = createStore(reducer, inistialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/linlin/Desktop/local-trading/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","Cookie","productListReducer","productDetailsReducer","cartReducer","userSigninReducer","cartItems","getJSON","userInfo","inistialState","cart","reducer","productList","productDetails","userSignin","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AAEA,MAAMC,SAAS,GAAGL,MAAM,CAACM,OAAP,CAAe,WAAf,KAA+B,EAAjD;AACA,MAAMC,QAAQ,GAAGP,MAAM,CAACM,OAAP,CAAe,UAAf,KAA8B,EAA/C;AAEA,MAAME,aAAa,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAEJ,IAAAA;AAAF;AAAR,CAAtB;AACA,MAAMK,OAAO,GAAGd,eAAe,CAAC;AAC5B;AACAe,EAAAA,WAAW,EAAEV,kBAFe;AAG5BW,EAAAA,cAAc,EAAEV,qBAHY;AAI5BO,EAAAA,IAAI,EAAEN,WAJsB;AAK5BU,EAAAA,UAAU,EAAET;AALgB,CAAD,CAA/B;AAQA,MAAMU,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+ClB,OAAvE,C,CACA;;AACA,MAAMmB,KAAK,GAAGtB,WAAW,CACrBe,OADqB,EAErBF,aAFqB,EAGrBM,eAAe,CAACjB,eAAe,CAACE,KAAD,CAAhB,CAHM,CAAzB;AAMA,eAAekB,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport Cookie from 'js-cookie';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userSigninReducer } from './reducers/userReducers';\n\nconst cartItems = Cookie.getJSON(\"cartItems\") || [];\nconst userInfo = Cookie.getJSON(\"userInfo\") || [];\n\nconst inistialState = { cart: { cartItems }};\nconst reducer = combineReducers({\n    //reducer: return new state based on that action\n    productList: productListReducer, \n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userSignin: userSigninReducer\n})\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// thunk is a middleware for redux, it allows us to run async operation inside redux\nconst store = createStore(\n    reducer, \n    inistialState, \n    composeEnhancer(applyMiddleware(thunk))\n    );\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}